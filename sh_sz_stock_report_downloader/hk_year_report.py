#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# @Date    : 2018-2-14
# @Author  : foodish
# @File    : hk_year_report.py
# 下载港股年报/半年报,pdf格式
# 仅能下载2006年6月后发布的文件
import re
import os
import datetime
import requests
from tqdm import tqdm


headers = {'User-Agent':'Mozilla 5.0'}
base_url = 'http://www.hkexnews.hk'
query_url = 'http://www.hkexnews.hk/listedco/listconews/advancedsearch/search_active_main_c.aspx'
pattern = re.compile(r'class="news" href="(.*?)" target="_blank">(.*?)</a>', re.S)
today = datetime.datetime.today()


def get_form_data(code, today):
    form_data = {
        '__VIEWSTATE':'',
        '__VIEWSTATEGENERATOR':'C344FAEC',
        '__VIEWSTATEENCRYPTED':'',
#         'ctl00$txt_today':'20180214',
        'ctl00$hfStatus':'ACM',
        'ctl00$hfAlert':'',
        'ctl00$txt_stock_code':code,
        'ctl00$txt_stock_name':'',
        'ctl00$rdo_SelectDocType':'rbAfter2006',
        'ctl00$sel_tier_1':'4',
        'ctl00$sel_DocTypePrior2006':'-1',
        'ctl00$sel_tier_2_group':'-2',
        'ctl00$sel_tier_2':'-2',
        'ctl00$ddlTierTwo':'59,1,7',
        'ctl00$ddlTierTwoGroup':'26,5',
        'ctl00$txtKeyWord':'',
        'ctl00$rdo_SelectDateOfRelease':'rbManualRange',
        'ctl00$sel_DateOfReleaseFrom_d':'01',
        'ctl00$sel_DateOfReleaseFrom_m':'04',
        'ctl00$sel_DateOfReleaseFrom_y':'1999',
        'ctl00$sel_DateOfReleaseTo_d':today.day,
        'ctl00$sel_DateOfReleaseTo_m':today.month,
        'ctl00$sel_DateOfReleaseTo_y':today.year,
        'ctl00$sel_defaultDateRange':'SevenDays',
        'ctl00$rdo_SelectSortBy':'rbDateTime',
    }
    return form_data


def get_download_url(code):
    form_data = get_form_data(code)
    r = requests.post(url=query_url, headers=headers, data=form_data)
    if r.status_code == 200:
        raw_results = re.findall(pattern, r.text)
        results = [(base_url + url, name) for url, name in raw_results]
        return results
    else:
        print('网络连接错误')


def create_folder(code):
    try:
        os.mkdir('./' + code)
    except:
        pass


def download(results, code):
    for download_url, name in tqdm(results):
        r = requests.get(download_url, headers=headers)
        if r.status_code == 200:
            parts = [code, '/', name, '.pdf']
            save_path = ''.join(parts)
            if not os.path.exists(save_path):
                with open(save_path, 'wb') as f:
                    for chunk in r.iter_content(chunk_size=1024):
                        if chunk:
                            f.write(chunk)


def start():
    stock_code = input('输入一个港股代码：\n')
    create_folder(stock_code)
    download_urls = get_download_url(stock_code)
    download(download_urls, stock_code)


if __name__ == '__main__':
    start()
